worker_processes  4;

worker_rlimit_nofile 1024;


events {
        worker_connections 512;
}


http {
        charset utf-8;
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        sendfile on;
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        client_max_body_size 0;
        keepalive_timeout  65;

        server {
                listen 8080;
                server_name _;
                root "/opt/app/www";
                expires 24h;
                add_header Cache-Control "public, no-transform";

                gzip on;
                gzip_proxied any;

                gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json  application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

                # NGINX has default redirects which were including the port and breaking.
                absolute_redirect off;
                port_in_redirect off;

                # For container health check
                location /nginxhealth {
                   return 200 'OK';
                }

                location ~ \.json$ {
                        set $encoding "";
                        set $suffix "";

                        # Check if the client accepts brotli and/or gzip
                        # Prefer brotli over gzip in the case both are supported
                        if ($http_accept_encoding ~* gzip) {
                                set $encoding "gzip";
                                set $suffix ".gz";
                        }

                        if ($http_accept_encoding ~* br) {
                                set $encoding "br";
                                set $suffix ".br";
                        }

                        # If uncompressed is requested, return 406 Not Acceptable
                        if ($encoding = "") {
                                return 406 "This resource is only available in compressed formats (brotli, gzip).";
                        }

                        # Serve the corresponding compressed file
                        rewrite ^(.+)\.json$ $1.json$suffix break;
                        add_header Content-Encoding $encoding;
                        add_header Vary Accept-Encoding;
                        try_files $uri =404;
                }

                # Remove .html at the end of url
                location / {
                    if ($request_uri ~ ^/(.*)\.html) {
                        return 301 $scheme://$host/$1;
                    }
                    try_files $uri $uri.html $uri/ =404;
                }
        }
}
