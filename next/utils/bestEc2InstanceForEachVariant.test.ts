import { describe, test, expect } from "vitest";
import bestEc2InstanceForEachVariant from "./bestEc2InstanceForEachVariant";
import { EC2Instance } from "@/types";

describe("bestEc2InstanceForEachVariant", () => {
    const mockInstances: EC2Instance[] = [
        {
            instance_type: "t3.small",
            family: "t3",
            pretty_name: "T3 Small",
            vCPU: 2,
            memory: 2,
            ECU: 1,
            memory_per_vcpu: 1,
            ECU_per_vcpu: 0.5,
            intel_avx: true,
            intel_avx2: true,
            intel_avx512: false,
            intel_turbo: true,
            arch: ["x86_64"],
            network_performance: "Low to Moderate",
            ebs_baseline_throughput: 0,
            ebs_baseline_iops: 0,
            ebs_throughput: 0,
            ebs_optimized: false,
            ebs_iops: 0,
            ebs_as_nvme: false,
            enhanced_networking: false,
            vpc_only: true,
            ipv6_support: true,
            placement_group_support: true,
            emr: false,
            generation: "current",
            pricing: {},
            GPU: 0,
        },
        {
            instance_type: "t3.medium",
            family: "t3",
            pretty_name: "T3 Medium",
            vCPU: 2,
            memory: 4,
            ECU: 2,
            memory_per_vcpu: 2,
            ECU_per_vcpu: 1,
            intel_avx: true,
            intel_avx2: true,
            intel_avx512: false,
            intel_turbo: true,
            arch: ["x86_64"],
            network_performance: "Low to Moderate",
            ebs_baseline_throughput: 0,
            ebs_baseline_iops: 0,
            ebs_throughput: 0,
            ebs_optimized: false,
            ebs_iops: 0,
            ebs_as_nvme: false,
            enhanced_networking: false,
            vpc_only: true,
            ipv6_support: true,
            placement_group_support: true,
            emr: false,
            generation: "current",
            pricing: {},
            GPU: 0,
        },
        {
            instance_type: "g4dn.xlarge",
            family: "g4dn",
            pretty_name: "G4DN XLarge",
            vCPU: 4,
            memory: 16,
            ECU: 4,
            memory_per_vcpu: 4,
            ECU_per_vcpu: 1,
            intel_avx: true,
            intel_avx2: true,
            intel_avx512: false,
            intel_turbo: true,
            arch: ["x86_64"],
            network_performance: "Up to 10 Gigabit",
            ebs_baseline_throughput: 0,
            ebs_baseline_iops: 0,
            ebs_throughput: 0,
            ebs_optimized: true,
            ebs_iops: 0,
            ebs_as_nvme: false,
            enhanced_networking: true,
            vpc_only: true,
            ipv6_support: true,
            placement_group_support: true,
            emr: false,
            generation: "current",
            pricing: {},
            GPU: 1,
            GPU_model: "NVIDIA T4",
            GPU_memory: 16,
        },
        {
            instance_type: "g4dn.2xlarge",
            family: "g4dn",
            pretty_name: "G4DN 2XLarge",
            vCPU: 8,
            memory: 32,
            ECU: 8,
            memory_per_vcpu: 4,
            ECU_per_vcpu: 1,
            intel_avx: true,
            intel_avx2: true,
            intel_avx512: false,
            intel_turbo: true,
            arch: ["x86_64"],
            network_performance: "Up to 10 Gigabit",
            ebs_baseline_throughput: 0,
            ebs_baseline_iops: 0,
            ebs_throughput: 0,
            ebs_optimized: true,
            ebs_iops: 0,
            ebs_as_nvme: false,
            enhanced_networking: true,
            vpc_only: true,
            ipv6_support: true,
            placement_group_support: true,
            emr: false,
            generation: "current",
            pricing: {},
            GPU: 1,
            GPU_model: "NVIDIA T4",
            GPU_memory: 16,
        },
    ];

    test("finds best instance for each variant based on closest instance", () => {
        const closestTo: EC2Instance = {
            instance_type: "t3.large",
            family: "t3",
            pretty_name: "T3 Large",
            vCPU: 2,
            memory: 8,
            ECU: 4,
            memory_per_vcpu: 4,
            ECU_per_vcpu: 2,
            intel_avx: true,
            intel_avx2: true,
            intel_avx512: false,
            intel_turbo: true,
            arch: ["x86_64"],
            network_performance: "Low to Moderate",
            ebs_baseline_throughput: 0,
            ebs_baseline_iops: 0,
            ebs_throughput: 0,
            ebs_optimized: false,
            ebs_iops: 0,
            ebs_as_nvme: false,
            enhanced_networking: false,
            vpc_only: true,
            ipv6_support: true,
            placement_group_support: true,
            emr: false,
            generation: "current",
            pricing: {},
            GPU: 0,
        };

        const result = bestEc2InstanceForEachVariant(
            mockInstances,
            closestTo,
            (instance) => instance.instance_type.split(".")[0],
        );

        expect(result).toEqual({
            t3: "t3.medium", // Closest to t3.large in terms of memory
            g4dn: "g4dn.xlarge", // Closest to t3.large in terms of vCPU
        });
    });

    test("handles empty instances array", () => {
        const closestTo: EC2Instance = {
            instance_type: "t3.large",
            family: "t3",
            pretty_name: "T3 Large",
            vCPU: 2,
            memory: 8,
            ECU: 4,
            memory_per_vcpu: 4,
            ECU_per_vcpu: 2,
            intel_avx: true,
            intel_avx2: true,
            intel_avx512: false,
            intel_turbo: true,
            arch: ["x86_64"],
            network_performance: "Low to Moderate",
            ebs_baseline_throughput: 0,
            ebs_baseline_iops: 0,
            ebs_throughput: 0,
            ebs_optimized: false,
            ebs_iops: 0,
            ebs_as_nvme: false,
            enhanced_networking: false,
            vpc_only: true,
            ipv6_support: true,
            placement_group_support: true,
            emr: false,
            generation: "current",
            pricing: {},
            GPU: 0,
        };

        const result = bestEc2InstanceForEachVariant(
            [],
            closestTo,
            (instance) => instance.instance_type.split(".")[0],
        );

        expect(result).toEqual({});
    });

    test("handles instances with same specs but different types", () => {
        const instances: EC2Instance[] = [
            {
                instance_type: "t3.small",
                family: "t3",
                pretty_name: "T3 Small",
                vCPU: 2,
                memory: 2,
                ECU: 1,
                memory_per_vcpu: 1,
                ECU_per_vcpu: 0.5,
                intel_avx: true,
                intel_avx2: true,
                intel_avx512: false,
                intel_turbo: true,
                arch: ["x86_64"],
                network_performance: "Low to Moderate",
                ebs_baseline_throughput: 0,
                ebs_baseline_iops: 0,
                ebs_throughput: 0,
                ebs_optimized: false,
                ebs_iops: 0,
                ebs_as_nvme: false,
                enhanced_networking: false,
                vpc_only: true,
                ipv6_support: true,
                placement_group_support: true,
                emr: false,
                generation: "current",
                pricing: {},
                GPU: 0,
            },
            {
                instance_type: "t4.small",
                family: "t4",
                pretty_name: "T4 Small",
                vCPU: 2,
                memory: 2,
                ECU: 1,
                memory_per_vcpu: 1,
                ECU_per_vcpu: 0.5,
                intel_avx: true,
                intel_avx2: true,
                intel_avx512: false,
                intel_turbo: true,
                arch: ["x86_64"],
                network_performance: "Low to Moderate",
                ebs_baseline_throughput: 0,
                ebs_baseline_iops: 0,
                ebs_throughput: 0,
                ebs_optimized: false,
                ebs_iops: 0,
                ebs_as_nvme: false,
                enhanced_networking: false,
                vpc_only: true,
                ipv6_support: true,
                placement_group_support: true,
                emr: false,
                generation: "current",
                pricing: {},
                GPU: 0,
            },
        ];

        const closestTo: EC2Instance = {
            instance_type: "t3.medium",
            family: "t3",
            pretty_name: "T3 Medium",
            vCPU: 2,
            memory: 4,
            ECU: 2,
            memory_per_vcpu: 2,
            ECU_per_vcpu: 1,
            intel_avx: true,
            intel_avx2: true,
            intel_avx512: false,
            intel_turbo: true,
            arch: ["x86_64"],
            network_performance: "Low to Moderate",
            ebs_baseline_throughput: 0,
            ebs_baseline_iops: 0,
            ebs_throughput: 0,
            ebs_optimized: false,
            ebs_iops: 0,
            ebs_as_nvme: false,
            enhanced_networking: false,
            vpc_only: true,
            ipv6_support: true,
            placement_group_support: true,
            emr: false,
            generation: "current",
            pricing: {},
            GPU: 0,
        };

        const result = bestEc2InstanceForEachVariant(
            instances,
            closestTo,
            (instance) => instance.instance_type.split(".")[0],
        );

        expect(result).toEqual({
            t3: "t3.small",
            t4: "t4.small",
        });
    });

    test("handles instances with GPU", () => {
        const instances: EC2Instance[] = [
            {
                instance_type: "g4dn.xlarge",
                family: "g4dn",
                pretty_name: "G4DN XLarge",
                vCPU: 4,
                memory: 16,
                ECU: 4,
                memory_per_vcpu: 4,
                ECU_per_vcpu: 1,
                intel_avx: true,
                intel_avx2: true,
                intel_avx512: false,
                intel_turbo: true,
                arch: ["x86_64"],
                network_performance: "Up to 10 Gigabit",
                ebs_baseline_throughput: 0,
                ebs_baseline_iops: 0,
                ebs_throughput: 0,
                ebs_optimized: true,
                ebs_iops: 0,
                ebs_as_nvme: false,
                enhanced_networking: true,
                vpc_only: true,
                ipv6_support: true,
                placement_group_support: true,
                emr: false,
                generation: "current",
                pricing: {},
                GPU: 1,
                GPU_model: "NVIDIA T4",
                GPU_memory: 16,
            },
            {
                instance_type: "g4dn.2xlarge",
                family: "g4dn",
                pretty_name: "G4DN 2XLarge",
                vCPU: 8,
                memory: 32,
                ECU: 8,
                memory_per_vcpu: 4,
                ECU_per_vcpu: 1,
                intel_avx: true,
                intel_avx2: true,
                intel_avx512: false,
                intel_turbo: true,
                arch: ["x86_64"],
                network_performance: "Up to 10 Gigabit",
                ebs_baseline_throughput: 0,
                ebs_baseline_iops: 0,
                ebs_throughput: 0,
                ebs_optimized: true,
                ebs_iops: 0,
                ebs_as_nvme: false,
                enhanced_networking: true,
                vpc_only: true,
                ipv6_support: true,
                placement_group_support: true,
                emr: false,
                generation: "current",
                pricing: {},
                GPU: 1,
                GPU_model: "NVIDIA T4",
                GPU_memory: 16,
            },
        ];

        const closestTo: EC2Instance = {
            instance_type: "g4dn.large",
            family: "g4dn",
            pretty_name: "G4DN Large",
            vCPU: 6,
            memory: 24,
            ECU: 6,
            memory_per_vcpu: 4,
            ECU_per_vcpu: 1,
            intel_avx: true,
            intel_avx2: true,
            intel_avx512: false,
            intel_turbo: true,
            arch: ["x86_64"],
            network_performance: "Up to 10 Gigabit",
            ebs_baseline_throughput: 0,
            ebs_baseline_iops: 0,
            ebs_throughput: 0,
            ebs_optimized: true,
            ebs_iops: 0,
            ebs_as_nvme: false,
            enhanced_networking: true,
            vpc_only: true,
            ipv6_support: true,
            placement_group_support: true,
            emr: false,
            generation: "current",
            pricing: {},
            GPU: 1,
            GPU_model: "NVIDIA T4",
            GPU_memory: 16,
        };

        const result = bestEc2InstanceForEachVariant(
            instances,
            closestTo,
            (instance) => instance.instance_type.split(".")[0],
        );

        expect(result).toEqual({
            g4dn: "g4dn.xlarge", // Closest to g4dn.large in terms of vCPU and memory
        });
    });
});
